{"version":3,"sources":["components/UploadableTextInput/UploadableTextInput.tsx","utils/getTextWidth.ts","utils/parseGraphML.ts","utils/getHVLayout.ts","utils/getLabelsLayout.ts","components/GraphView/GraphView.tsx","components/PointsView/PointsView.tsx","pages/TreeHV.tsx","pages/LabelPlacement.tsx","utils/parseLabelDesc.ts","pages/Pages.tsx","App.tsx","index.tsx"],"names":["UploadableTextInput","value","onChange","label","accept","Form","className","Group","Label","Control","as","rows","target","File","files","file","undefined","reader","FileReader","onload","e","result","readAsText","canvas","getTextWidth","text","font","document","createElement","context","getContext","measureText","width","getProp","obj","propName","throwError","prop","Error","parseGraphML","xml","graphJson","graphml","graph","node","edge","nodes","Set","Array","isArray","forEach","nodeName","add","edges","from","has","to","push","getParsedGraph","parse","ignoreAttributes","isRectBetter","rect1","rect2","h","w","Math","abs","getHVNodes","root","rects","Map","dfs","children","get","length","childRect1","childRect2","minEdgeWidth","max","DEFAULT_NODE_RADIUS","NODE_FONT","NODE_TEXT_PADDING_RIGHT","minEdgeHeight","NODE_FONT_SIZE","NODE_TEXT_PADDING_TOP","w1","h1","d","dw","dh","w2","h2","w3","h3","rect3","w4","h4","_rects","sort","set","x","y","radius","i","convertRectsToNodes","getCompId","index","getNodeComp","id","slice","isSubrect","sub","rect","left","right","top","bottom","CANVAS_RECT","getLabelsLayout","labels","r1","r2","edgesT","solution","p1","p2","stat","statIsOutside","comp","compIsOutside","j","iComp","jComp","config","preSolution","order","used","dfs1","child","colors","dfs2","color","entries","val1","val2","cNode","cComp","val","getConfig","points","parseInt","labelWidth","labelHeight","labelDx","labelDy","NODE_FONT_FAMILY","NODE_FONT_SIZE_PX","_GraphView","ref","React","svg","this","draw","remove","minX","Number","POSITIVE_INFINITY","minY","maxX","NEGATIVE_INFINITY","maxY","rightLabelMaxWidth","leftNodeMaxRadius","bottomNodeMaxRadius","props","min","current","height","d3","append","attr","BASE_PADDING","join","call","on","vis","transform","selectAll","data","values","enter","style","GraphView","withResizeDetector","PointsView","state","enableZoom","Check","setState","type","popover","Popover","Title","Content","Info","OverlayTrigger","trigger","placement","overlay","cursor","TreeHV","graphProps","setGraphProps","setGraphPropsDebounced","debounce","setValue","Container","Row","Col","edgesList","map","possibleRoots","delete","next","getHVLayout","xmlns","viewBox","marginTop","fill","strokeWidth","stroke","cx","cy","r","LabelPlacement","pointsProps","setPointsProps","setPointsPropsDebouced","error","setError","desc","split","line","splitted","n","some","isNaN","parseLabelDesc","Alert","variant","Pages","Tabs","defaultActiveKey","Tab","eventKey","title","disabled","App","href","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.1363e52a.chunk.js","sourcesContent":["import \"./UploadableTextInput.css\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nexport type UploadableTextInputProps = {\r\n  value: string;\r\n  onChange: (value: string) => void;\r\n  label: React.ReactNode;\r\n  accept?: string;\r\n};\r\n\r\nexport function UploadableTextInput({\r\n  value,\r\n  onChange,\r\n  label,\r\n  accept,\r\n}: UploadableTextInputProps) {\r\n  const onChangeFile = ({\r\n    target: { files },\r\n  }: React.ChangeEvent<HTMLInputElement>) => {\r\n    const file = files?.[0];\r\n    if (file === undefined) return;\r\n\r\n    var reader = new FileReader();\r\n\r\n    reader.onload = (function (file) {\r\n      return function (e: ProgressEvent<FileReader>) {\r\n        onChange(e.target.result as string);\r\n      };\r\n    })(file);\r\n\r\n    reader.readAsText(file);\r\n  };\r\n\r\n  return (\r\n    <Form className=\"d-flex flex-column h-100 py-1\">\r\n      <Form.Group className=\"uploadable-text-input-textarea\">\r\n        <Form.Label className=\"text-center w-100\">{label}</Form.Label>\r\n        <Form.Control\r\n          as=\"textarea\"\r\n          rows={12}\r\n          value={value}\r\n          onChange={({ target: { value } }) => onChange(value)}\r\n        />\r\n      </Form.Group>\r\n      <Form.Group className=\"uploadable-text-input-file border-top border-secondary w-100\">\r\n        <Form.File\r\n          className=\"text-center\"\r\n          accept={accept}\r\n          onChange={onChangeFile}\r\n        />\r\n      </Form.Group>\r\n    </Form>\r\n  );\r\n}\r\n","let canvas: HTMLCanvasElement;\r\n\r\nexport function getTextWidth(text: string, font: string): number {\r\n  if (canvas === undefined) canvas = document.createElement(\"canvas\");\r\n  const context = canvas.getContext(\"2d\");\r\n  context.font = font;\r\n  const metrics = context.measureText(text);\r\n  return metrics.width;\r\n}\r\n","import { parse } from \"fast-xml-parser\";\r\n\r\ntype GraphMLNode = {\r\n  \"@_id\"?: string;\r\n};\r\n\r\ntype GraphMLEdge = {\r\n  \"@_id\": string;\r\n  \"@_source\": string;\r\n  \"@_target\": string;\r\n};\r\n\r\ntype GraphML = {\r\n  graphml: {\r\n    graph: {\r\n      \"@_id\"?: string;\r\n      edge?: GraphMLEdge | GraphMLEdge[];\r\n      node?: GraphMLNode | GraphMLNode[];\r\n    };\r\n  };\r\n};\r\n\r\ntype Edge = { from: string; to: string };\r\n\r\nexport type Graph = {\r\n  nodes: Set<string>;\r\n  edges: Edge[];\r\n};\r\n\r\nfunction getProp<T>(\r\n  obj: T,\r\n  propName: keyof T,\r\n  throwError: boolean = true\r\n): T[keyof T] {\r\n  const prop = obj[propName];\r\n  if (prop === undefined && throwError) {\r\n    throw Error(`No ${propName} specified for object ${obj}`);\r\n  }\r\n  return prop;\r\n}\r\n\r\nfunction getParsedGraph(graphJson: GraphML): Graph {\r\n  if (graphJson.graphml === undefined) throw Error(\"No graphml tag specified\");\r\n  if (graphJson.graphml.graph === undefined)\r\n    throw Error(\"No graph tag specified\");\r\n  let { node, edge } = graphJson.graphml.graph;\r\n\r\n  const nodes = new Set<string>();\r\n  if (node !== undefined) {\r\n    if (!Array.isArray(node)) node = [node];\r\n    node.forEach((node) => {\r\n      const nodeName = getProp(node, \"@_id\");\r\n      nodes.add(nodeName);\r\n    });\r\n  }\r\n\r\n  const edges: Edge[] = [];\r\n  if (edge !== undefined) {\r\n    if (!Array.isArray(edge)) edge = [edge];\r\n    edge.forEach((edge) => {\r\n      const from = getProp(edge, \"@_source\");\r\n      if (!nodes.has(from)) throw Error(`Node ${from} was not specified`);\r\n      const to = getProp(edge, \"@_target\");\r\n      if (!nodes.has(to)) throw Error(`Node ${to} was not specified`);\r\n\r\n      edges.push({ from, to });\r\n    });\r\n  }\r\n\r\n  return { nodes, edges };\r\n}\r\n\r\nexport function parseGraphML(xml: string): Graph | undefined {\r\n  try {\r\n    const graphJson = parse(xml, { ignoreAttributes: false });\r\n    return getParsedGraph(graphJson);\r\n  } catch {\r\n    return undefined;\r\n  }\r\n}\r\n","import { getTextWidth } from \"./getTextWidth\";\r\nimport {\r\n  GraphViewProps,\r\n  Node,\r\n  NODE_FONT_SIZE,\r\n  NODE_FONT,\r\n  NODE_TEXT_PADDING_RIGHT,\r\n  NODE_TEXT_PADDING_TOP,\r\n} from \"src/components\";\r\nimport { Graph } from \"./parseGraphML\";\r\n\r\ntype Delta = {\r\n  dw: number;\r\n  dh: number;\r\n};\r\n\r\ntype Deltas = [Delta, Delta];\r\n\r\ntype Rect = {\r\n  w: number;\r\n  h: number;\r\n  d?: [Delta, Delta];\r\n};\r\n\r\nconst DEFAULT_NODE_RADIUS = 2;\r\nconst MIN_EDGE_LENGTH = 5;\r\n\r\nfunction convertRectsToNodes(\r\n  root: string,\r\n  rects: Map<string, Rect>,\r\n  edges: Map<string, string[]>\r\n): Map<string, Node> {\r\n  const nodes = new Map<string, Node>();\r\n  function dfs(node: string, x: number, y: number): void {\r\n    nodes.set(node, { x, y, radius: 1 });\r\n    const children = edges.get(node);\r\n    if (children.length === 0) {\r\n      return;\r\n    }\r\n\r\n    const { d } = rects.get(node);\r\n    children.forEach((node, i) => {\r\n      dfs(node, x + d[i].dw, y + d[i].dh);\r\n    });\r\n  }\r\n\r\n  dfs(root, 0, 0);\r\n\r\n  return nodes;\r\n}\r\n\r\nfunction isRectBetter(rect1: Rect, rect2: Rect): number {\r\n  return (\r\n    rect1.h * rect1.w - rect2.h * rect2.w ||\r\n    Math.abs(rect1.h - rect1.w) - Math.abs(rect2.h - rect2.w)\r\n  );\r\n}\r\n\r\nfunction getHVNodes(\r\n  root: string,\r\n  edges: Map<string, string[]>\r\n): Map<string, Node> {\r\n  const rects = new Map<string, Rect>();\r\n  function dfs(node: string): void {\r\n    const children = edges.get(node);\r\n    if (children.length === 0) {\r\n      rects.set(node, {\r\n        w: getTextWidth(node, NODE_FONT) + DEFAULT_NODE_RADIUS,\r\n        h: NODE_FONT_SIZE + DEFAULT_NODE_RADIUS,\r\n      });\r\n      return;\r\n    }\r\n\r\n    children.forEach((node) => dfs(node));\r\n    const childRect1 = rects.get(children[0]);\r\n    const childRect2 =\r\n      children.length === 2 ? rects.get(children[1]) : { w: 0, h: 0 };\r\n\r\n    const minEdgeWidth = Math.max(\r\n      DEFAULT_NODE_RADIUS * 2 + MIN_EDGE_LENGTH,\r\n      getTextWidth(node, NODE_FONT) + NODE_TEXT_PADDING_RIGHT\r\n    );\r\n    const minEdgeHeight = Math.max(\r\n      DEFAULT_NODE_RADIUS * 2 + MIN_EDGE_LENGTH,\r\n      NODE_FONT_SIZE + NODE_TEXT_PADDING_TOP\r\n    );\r\n\r\n    const w1 = Math.max(minEdgeWidth, childRect2.w + 1);\r\n    const h1 = minEdgeHeight;\r\n    const rect1 = {\r\n      w: childRect1.w + w1,\r\n      h: childRect2.h + h1,\r\n      d: [\r\n        { dw: w1, dh: 0 },\r\n        { dw: 0, dh: h1 },\r\n      ] as Deltas,\r\n    }; // 1 - right_width2, 2 - down_1\r\n\r\n    const w2 = minEdgeWidth;\r\n    const h2 = Math.max(minEdgeHeight, childRect1.h + 1);\r\n    const rect2 = {\r\n      w: childRect1.w + w2,\r\n      h: childRect2.h + h2,\r\n      d: [\r\n        { dw: w2, dh: 0 },\r\n        { dw: 0, dh: h2 },\r\n      ] as Deltas,\r\n    }; // 1 - right_1, 2 - down_height1\r\n\r\n    const w3 = Math.max(minEdgeWidth, childRect1.w + 1);\r\n    const h3 = minEdgeHeight;\r\n    const rect3 = {\r\n      w: childRect2.w + w3,\r\n      h: childRect1.h + h3,\r\n      d: [\r\n        { dw: 0, dh: h3 },\r\n        { dw: w3, dh: 0 },\r\n      ] as Deltas,\r\n    }; // 1 - down_1, 2 - right_width1\r\n\r\n    const w4 = minEdgeWidth;\r\n    const h4 = Math.max(minEdgeHeight, childRect2.h + 1);\r\n    const rect4 = {\r\n      w: childRect2.w + w4,\r\n      h: childRect1.h + h4,\r\n      d: [\r\n        { dw: 0, dh: h4 },\r\n        { dw: w4, dh: 0 },\r\n      ] as Deltas,\r\n    }; // 1 - down_height2, 2 - right_1\r\n\r\n    const _rects = [rect1, rect2, rect3, rect4];\r\n    _rects.sort(isRectBetter);\r\n    rects.set(node, _rects[0]);\r\n  }\r\n\r\n  dfs(root);\r\n\r\n  return convertRectsToNodes(root, rects, edges);\r\n}\r\n\r\nexport function getHVLayout(graph: Graph): GraphViewProps {\r\n  const edgesList = new Map<string, string[]>(\r\n    [...graph.nodes.values()].map((node) => [node, []])\r\n  );\r\n  let possibleRoots = new Set(graph.nodes);\r\n  for (const edge of graph.edges) {\r\n    edgesList.get(edge.from).push(edge.to);\r\n    possibleRoots.delete(edge.to);\r\n  }\r\n\r\n  const root = possibleRoots.values().next().value;\r\n  const nodes = getHVNodes(root, edgesList);\r\n  return { nodes, edges: graph.edges };\r\n}\r\n","import { Point, PointsViewProps } from \"src/components\";\r\nimport { Label } from \"./parseLabelDesc\";\r\n\r\ntype Rect = {\r\n  left: number;\r\n  right: number;\r\n  top: number;\r\n  bottom: number;\r\n};\r\n\r\nfunction getConfig(\r\n  preSolution: Map<string, boolean>,\r\n  nodes: string[],\r\n  edges: Map<string, string[]>,\r\n  edgesT: Map<string, string[]>\r\n): Map<string, boolean> {\r\n  const order: string[] = [];\r\n  const used = new Set<string>();\r\n\r\n  function dfs1(node: string) {\r\n    used.add(node);\r\n    for (const child of edges.get(node)) {\r\n      if (!used.has(child)) dfs1(child);\r\n    }\r\n    order.push(node);\r\n  }\r\n\r\n  const colors = new Map<string, number>();\r\n  function dfs2(node: string, color: number) {\r\n    colors.set(node, color);\r\n    for (const child of edgesT.get(node)) {\r\n      if (!colors.has(child)) dfs2(child, color);\r\n    }\r\n  }\r\n\r\n  for (const [node] of [...preSolution.entries()].sort(([, val1], [, val2]) =>\r\n    val1 && !val2 ? -1 : val2 && !val1 ? 1 : 0\r\n  )) {\r\n    if (!used.has(node)) dfs1(node);\r\n  }\r\n  for (const node of nodes) {\r\n    if (!used.has(node)) dfs1(node);\r\n  }\r\n\r\n  for (let i = 0, color = 0; i < nodes.length; ++i) {\r\n    const node = order[nodes.length - i - 1];\r\n    if (!colors.has(node)) dfs2(node, color++);\r\n  }\r\n\r\n  const solution = new Map<string, boolean>();\r\n  for (const node of nodes) {\r\n    const comp = getNodeComp(node);\r\n\r\n    const cNode = colors.get(node) ?? -1,\r\n      cComp = colors.get(comp) ?? -1;\r\n    if (cNode === cComp) return undefined;\r\n    if (preSolution.has(node)) {\r\n      const val = cNode > cComp;\r\n      if (preSolution.get(node) !== val) return undefined;\r\n    }\r\n    solution.set(node, cNode > cComp);\r\n    solution.set(comp, cNode < cComp);\r\n  }\r\n\r\n  return solution;\r\n}\r\n\r\nfunction getStatId(index: number): string {\r\n  return `${index}`;\r\n}\r\n\r\nfunction getCompId(index: number): string {\r\n  return `_${index}`;\r\n}\r\n\r\nfunction getNodeComp(id: string): string {\r\n  if (id[0] === \"_\") return id.slice(1);\r\n  return `_${id}`;\r\n}\r\n\r\nfunction getNodeIdx(id: string): number {\r\n  if (id[0] === \"_\") return parseInt(id.slice(1));\r\n  return parseInt(id);\r\n}\r\n\r\nfunction areRectsIntersects(r1: Rect, r2: Rect): boolean {\r\n  return !(\r\n    r2.left >= r1.right ||\r\n    r2.right <= r1.left ||\r\n    r2.top >= r1.bottom ||\r\n    r2.bottom <= r1.top\r\n  );\r\n}\r\n\r\nfunction isSubrect(sub: Rect, rect: Rect): boolean {\r\n  return !(\r\n    sub.left < rect.left ||\r\n    sub.right > rect.right ||\r\n    sub.top < rect.top ||\r\n    sub.bottom > rect.bottom\r\n  );\r\n}\r\n\r\n// TODO: произвольный канвас\r\nconst CANVAS_RECT = { left: 0, top: 0, right: 500, bottom: 500 };\r\n\r\nexport function getLabelsLayout(labels: Label[]): PointsViewProps {\r\n  const nodes: string[] = [];\r\n  const rects: Rect[] = [];\r\n  const edges = new Map<string, string[]>();\r\n  const edgesT = new Map<string, string[]>();\r\n  const solution = new Map<string, boolean>();\r\n  for (let i = 0; i < labels.length; ++i) {\r\n    const { w, h, p1, p2 } = labels[i];\r\n\r\n    const rect1 = {\r\n      left: p1.x,\r\n      top: p1.y,\r\n      right: p1.x + w,\r\n      bottom: p1.y + h,\r\n    };\r\n    const stat = getStatId(i);\r\n    let statIsOutside = !isSubrect(rect1, CANVAS_RECT);\r\n    nodes.push(stat);\r\n    edges.set(stat, []);\r\n    edgesT.set(stat, []);\r\n    rects.push(rect1);\r\n\r\n    const rect2 = {\r\n      left: p2.x,\r\n      top: p2.y,\r\n      right: p2.x + w,\r\n      bottom: p2.y + h,\r\n    };\r\n    const comp = getCompId(i);\r\n    let compIsOutside = !isSubrect(rect2, CANVAS_RECT);\r\n    nodes.push(comp);\r\n    edges.set(comp, []);\r\n    edgesT.set(comp, []);\r\n    rects.push(rect2);\r\n\r\n    if (statIsOutside && compIsOutside) return undefined;\r\n    if (statIsOutside) {\r\n      solution.set(stat, false);\r\n      solution.set(comp, true);\r\n    } else if (compIsOutside) {\r\n      solution.set(stat, true);\r\n      solution.set(comp, false);\r\n    }\r\n  }\r\n\r\n  for (let i = 0; i < rects.length; ++i) {\r\n    for (let j = i + 1; j < rects.length; ++j) {\r\n      if (areRectsIntersects(rects[i], rects[j])) {\r\n        const iComp = getNodeComp(nodes[i]);\r\n        const jComp = getNodeComp(nodes[j]);\r\n\r\n        edges.get(nodes[i])?.push(jComp);\r\n        edges.get(nodes[j])?.push(iComp);\r\n\r\n        edgesT.get(jComp)?.push(nodes[i]);\r\n        edgesT.get(iComp)?.push(nodes[j]);\r\n      }\r\n    }\r\n  }\r\n\r\n  const config = getConfig(solution, nodes, edges, edgesT);\r\n  if (config === undefined) return undefined;\r\n  const points: Point[] = [];\r\n  for (let i = 0; i < nodes.length; ++i) {\r\n    if (config.get(nodes[i])) {\r\n      const label = labels[getNodeIdx(nodes[i])];\r\n      const rect = rects[i];\r\n      points.push({\r\n        x: label.x,\r\n        y: label.y,\r\n        labelWidth: label.w,\r\n        labelHeight: label.h,\r\n        labelDx: label.x - rect.left,\r\n        labelDy: label.y - rect.top,\r\n      });\r\n    }\r\n  }\r\n\r\n  return { points };\r\n}\r\n","import * as React from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport { withResizeDetector } from \"react-resize-detector\";\r\nimport { getTextWidth } from \"src/utils\";\r\n\r\nexport type Node = {\r\n  x: number;\r\n  y: number;\r\n  radius: number;\r\n};\r\nexport type Edge = { from: string; to: string };\r\n\r\nexport interface GraphViewProps {\r\n  nodes: Map<string, Node>;\r\n  edges: Edge[];\r\n}\r\n\r\ninterface GraphViewCollectedProps {\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\nexport const NODE_FONT_SIZE = 14;\r\nexport const NODE_TEXT_PADDING_RIGHT = 4;\r\nexport const NODE_TEXT_PADDING_TOP = 4;\r\nconst NODE_FONT_FAMILY = \"Bree Serif\";\r\nconst NODE_FONT_SIZE_PX = `${NODE_FONT_SIZE}px`;\r\n\r\nexport const NODE_FONT = `${NODE_FONT_SIZE_PX} ${NODE_FONT_FAMILY}`;\r\n\r\nconst BASE_PADDING = 5;\r\n\r\nclass _GraphView extends React.Component<\r\n  GraphViewProps & Partial<GraphViewCollectedProps>\r\n> {\r\n  private ref = React.createRef<HTMLDivElement>();\r\n  private svg: d3.Selection<SVGSVGElement, unknown, null, undefined>;\r\n\r\n  componentDidMount() {\r\n    this.draw();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.svg.remove();\r\n    this.draw();\r\n  }\r\n\r\n  render() {\r\n    return <div className=\"h-100 w-100\" ref={this.ref} />;\r\n  }\r\n\r\n  private draw() {\r\n    let minX = Number.POSITIVE_INFINITY;\r\n    let minY = Number.POSITIVE_INFINITY;\r\n    let maxX = Number.NEGATIVE_INFINITY;\r\n    let maxY = Number.NEGATIVE_INFINITY;\r\n    let rightLabelMaxWidth = Number.NEGATIVE_INFINITY;\r\n    let leftNodeMaxRadius = Number.NEGATIVE_INFINITY;\r\n    let bottomNodeMaxRadius = Number.NEGATIVE_INFINITY;\r\n\r\n    for (const [node, { x, y, radius }] of this.props.nodes.entries()) {\r\n      minX = Math.min(minX, x);\r\n      minY = Math.min(minY, y);\r\n      maxX = Math.max(maxX, x);\r\n      maxY = Math.max(maxY, y);\r\n      if (maxX === x) {\r\n        rightLabelMaxWidth = Math.max(\r\n          rightLabelMaxWidth,\r\n          getTextWidth(node, NODE_FONT)\r\n        );\r\n      }\r\n      if (minX === x) {\r\n        leftNodeMaxRadius = Math.max(leftNodeMaxRadius, radius);\r\n      }\r\n\r\n      if (maxY === y) {\r\n        bottomNodeMaxRadius = Math.max(bottomNodeMaxRadius, radius);\r\n      }\r\n    }\r\n\r\n    const node = this.ref.current;\r\n\r\n    const w = maxX - minX;\r\n    const h = maxY - minY;\r\n\r\n    const { width, height, nodes, edges } = this.props;\r\n\r\n    this.svg = d3\r\n      .select(node)\r\n      .append(\"svg\")\r\n      .attr(\"cursor\", \"move\")\r\n      .attr(\"width\", width)\r\n      .attr(\"height\", height)\r\n      .attr(\r\n        \"viewBox\",\r\n        [\r\n          minX - leftNodeMaxRadius - BASE_PADDING,\r\n          minY - NODE_FONT_SIZE - BASE_PADDING,\r\n          w + rightLabelMaxWidth + leftNodeMaxRadius + BASE_PADDING * 2,\r\n          h + NODE_FONT_SIZE + bottomNodeMaxRadius + BASE_PADDING * 2,\r\n        ].join(\" \")\r\n      )\r\n      .call(\r\n        d3.zoom<SVGSVGElement, unknown>().on(\"zoom\", function (e) {\r\n          vis.attr(\"transform\", e.transform);\r\n        })\r\n      );\r\n\r\n    const vis = this.svg.append(\"g\");\r\n    vis\r\n      .selectAll(\"circle .nodes\")\r\n      .data(nodes.values())\r\n      .enter()\r\n      .append(\"svg:circle\")\r\n      .attr(\"class\", \"nodes\")\r\n      .attr(\"cx\", (d) => d.x)\r\n      .attr(\"cy\", (d) => d.y)\r\n      .attr(\"r\", (d) => d.radius)\r\n      .attr(\"stroke\", \"black\");\r\n\r\n    vis\r\n      .selectAll(\".line\")\r\n      .data(edges)\r\n      .enter()\r\n      .append(\"line\")\r\n      .attr(\"x1\", (d) => nodes.get(d.from).x)\r\n      .attr(\"y1\", (d) => nodes.get(d.from).y)\r\n      .attr(\"x2\", (d) => nodes.get(d.to).x)\r\n      .attr(\"y2\", (d) => nodes.get(d.to).y)\r\n      .style(\"stroke\", \"black\");\r\n\r\n    vis\r\n      .selectAll(\"text\")\r\n      .data(nodes.entries())\r\n      .enter()\r\n      .append(\"text\")\r\n      .text(([name]) => {\r\n        return name;\r\n      })\r\n      .attr(\"x\", ([, { x, radius }]) => x + radius)\r\n      .attr(\"y\", ([, { y, radius }]) => y - radius - 1)\r\n      .attr(\"font-family\", NODE_FONT_FAMILY)\r\n      .attr(\"font-size\", NODE_FONT_SIZE_PX)\r\n      .attr(\"fill\", \"black\")\r\n      .attr(\"text-anchor\", \"beginning\");\r\n  }\r\n}\r\n\r\nexport const GraphView = withResizeDetector(_GraphView);\r\n","import * as React from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nexport type Point = {\r\n  x: number;\r\n  y: number;\r\n\r\n  labelWidth: number;\r\n  labelHeight: number;\r\n\r\n  labelDx: number;\r\n  labelDy: number;\r\n};\r\n\r\nexport interface PointsViewProps {\r\n  points: Point[];\r\n}\r\n\r\ntype PointsViewState = {\r\n  enableZoom: boolean;\r\n};\r\n\r\nexport class PointsView extends React.Component<\r\n  PointsViewProps,\r\n  PointsViewState\r\n> {\r\n  private ref = React.createRef<HTMLDivElement>();\r\n  private svg: d3.Selection<SVGSVGElement, unknown, null, undefined>;\r\n\r\n  state = { enableZoom: false };\r\n\r\n  componentDidMount() {\r\n    this.draw();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.svg.remove();\r\n    this.draw();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"h-100 w-100 d-flex flex-column align-items-center justify-content-center\"\r\n        ref={this.ref}\r\n      >\r\n        <Form.Check\r\n          onChange={() => this.setState({ enableZoom: !this.state.enableZoom })}\r\n          type=\"checkbox\"\r\n          label=\"Масштабирование\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private draw() {\r\n    let minX = Number.POSITIVE_INFINITY;\r\n    let minY = Number.POSITIVE_INFINITY;\r\n    let maxX = Number.NEGATIVE_INFINITY;\r\n    let maxY = Number.NEGATIVE_INFINITY;\r\n\r\n    const { points } = this.props;\r\n    for (const { x, y, labelWidth, labelHeight, labelDx, labelDy } of points) {\r\n      minX = Math.min(minX, x - labelDx);\r\n      minY = Math.min(minY, y - labelDy);\r\n      maxX = Math.max(maxX, x - labelDx + labelWidth);\r\n      maxY = Math.max(maxY, y - labelDy + labelHeight);\r\n    }\r\n\r\n    const node = this.ref.current;\r\n\r\n    this.svg = d3\r\n      .select(node)\r\n      .append(\"svg\")\r\n      .attr(\"width\", 500)\r\n      .attr(\"height\", 500)\r\n      .style(\"box-shadow\", \"rgb(0, 0, 0, 0.5) 1px 1px 4px\");\r\n\r\n    if (this.state.enableZoom) {\r\n      this.svg = this.svg\r\n        .attr(\"viewBox\", [-10, -10, 520, 520].join(\" \"))\r\n        .attr(\"cursor\", \"move\")\r\n        .call(\r\n          d3.zoom<SVGSVGElement, unknown>().on(\"zoom\", function (e) {\r\n            vis.attr(\"transform\", e.transform);\r\n          })\r\n        );\r\n    } else {\r\n      this.svg = this.svg.attr(\"viewBox\", [0, 0, 500, 500].join(\" \"));\r\n    }\r\n\r\n    const vis = this.svg.append(\"g\");\r\n    vis\r\n      .append(\"pattern\")\r\n      .attr(\"id\", \"diagonalHatch\")\r\n      .attr(\"width\", 4)\r\n      .attr(\"height\", 4)\r\n      .attr(\"patternUnits\", \"userSpaceOnUse\")\r\n      .append(\"path\")\r\n      .attr(\"d\", \"M-1,1 l2,-2 M0,4 l4,-4 M3,5 l2,-2\")\r\n      .style(\"stroke\", \"red\")\r\n      .style(\"stroke-width\", 1);\r\n    vis\r\n      .append(\"rect\")\r\n      .attr(\"x\", -50000)\r\n      .attr(\"y\", -50000)\r\n      .attr(\"width\", 100500)\r\n      .attr(\"height\", 100500)\r\n      .attr(\"stroke\", \"red\")\r\n      .attr(\"stroke-width\", 0)\r\n      .attr(\"fill\", \"url(#diagonalHatch)\");\r\n    vis\r\n      .append(\"rect\")\r\n      .attr(\"x\", -1)\r\n      .attr(\"y\", -1)\r\n      .attr(\"width\", 502)\r\n      .attr(\"height\", 502)\r\n      .attr(\"stroke\", \"red\")\r\n      .attr(\"stroke-width\", 1)\r\n      .attr(\"fill\", \"white\");\r\n\r\n    vis\r\n      .selectAll(\"circle .nodes\")\r\n      .data(points)\r\n      .enter()\r\n      .append(\"svg:circle\")\r\n      .attr(\"class\", \"nodes\")\r\n      .attr(\"cx\", (d) => d.x)\r\n      .attr(\"cy\", (d) => d.y)\r\n      .attr(\"r\", 1)\r\n      .attr(\"stroke\", \"black\");\r\n\r\n    vis\r\n      .selectAll(\".rect\")\r\n      .data(points)\r\n      .enter()\r\n      .append(\"rect\")\r\n      .attr(\"x\", (d) => d.x - d.labelDx)\r\n      .attr(\"y\", (d) => d.y - d.labelDy)\r\n      .attr(\"width\", (d) => d.labelWidth)\r\n      .attr(\"height\", (d) => d.labelHeight)\r\n      .attr(\"stroke\", \"black\")\r\n      .attr(\"stroke-width\", 1)\r\n      .attr(\"fill\", \"none\");\r\n  }\r\n}\r\n","import * as React from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport { debounce } from \"lodash\";\r\nimport { UploadableTextInput, GraphView, GraphViewProps } from \"src/components\";\r\nimport { getHVLayout, parseGraphML } from \"src/utils\";\r\nimport Popover from \"react-bootstrap/Popover\";\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\r\nimport { FiInfo } from \"react-icons/fi\";\r\n\r\nconst popover = (\r\n  <Popover id=\"popover-basic\">\r\n    <Popover.Title as=\"h3\">Формат входных данных</Popover.Title>\r\n    <Popover.Content>\r\n      Текст в формате GraphML, либо текстовый файл с расширением \"xml\".\r\n      <br />\r\n      <strong>Пример:</strong>\r\n      <br />\r\n      {'<graphml>'}\r\n      <br />\r\n      {'  <graph>'}\r\n      <br />\r\n      {'    <node id=\"n0\"/>'}\r\n      <br />\r\n      {'    <node id=\"n1\"/>'}\r\n      <br />\r\n      {'    <edge source=\"n0\" target=\"n1\"/>'}\r\n      <br />\r\n      {'  </graph>'}\r\n      <br />\r\n      {'</graphml>'}\r\n      <br />\r\n      <strong></strong>\r\n      <br />\r\n      Алгоритм пытается учесть длину имени вершины.\r\n    </Popover.Content>\r\n  </Popover>\r\n);\r\n\r\nconst Info = () => (\r\n  <OverlayTrigger trigger=\"click\" placement=\"right\" overlay={popover}>\r\n    {({ ref, ...props }) => (\r\n      <div className=\"d-flex flex-row justify-content-center\">\r\n        <div className=\"me-1\">Введите граф в формате GraphML</div>\r\n        <div ref={ref} {...props} style={{ cursor: \"pointer\" }}>\r\n          <FiInfo />\r\n        </div>\r\n      </div>\r\n    )}\r\n  </OverlayTrigger>\r\n);\r\n\r\nexport function TreeHV() {\r\n  const [graphProps, setGraphProps] = React.useState<GraphViewProps>({\r\n    nodes: new Map(),\r\n    edges: [],\r\n  });\r\n\r\n  const setGraphPropsDebounced = debounce(setGraphProps, 500);\r\n\r\n  const [value, setValue] = React.useState(\"\");\r\n  const onChange = (value: string) => {\r\n    setValue(value);\r\n    const graph = parseGraphML(value);\r\n    if (graph === undefined) return;\r\n\r\n    const graphProps = getHVLayout(graph);\r\n    setGraphPropsDebounced(graphProps);\r\n  };\r\n\r\n  return (\r\n    <Container className=\"px-0 mx-0 mw-100 h-100\">\r\n      <Row className=\"main-container px-0 mx-0 mw-100 h-100\">\r\n        <Col className=\"main-left-panel h-100\">\r\n          <UploadableTextInput\r\n            value={value}\r\n            onChange={onChange}\r\n            label={<Info />}\r\n            accept=\"text/xml\"\r\n          />\r\n        </Col>\r\n        <Col className=\"main-content px-0 mx-0 h-100\">\r\n          <GraphView {...graphProps} />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Popover from \"react-bootstrap/Popover\";\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\nimport { FiInfo } from \"react-icons/fi\";\r\nimport { debounce } from \"lodash\";\r\nimport {\r\n  UploadableTextInput,\r\n  PointsView,\r\n  PointsViewProps,\r\n} from \"src/components\";\r\nimport { getLabelsLayout, parseLabelDesc } from \"src/utils\";\r\n\r\nconst popover = (\r\n  <Popover id=\"popover-basic\">\r\n    <Popover.Title as=\"h3\">Формат входных данных</Popover.Title>\r\n    <Popover.Content>\r\n      Текст в формате csv, постолбчато задающий координаты точек и размеры\r\n      подписей.\r\n      <br />\r\n      {\"Формат строки: <x>,<y>,<w>,<h>;\"}\r\n      <br />\r\n      <strong>Пример:</strong>\r\n      <br />\r\n      100,10,50,10;\r\n      <br />\r\n      100,10,50,10;\r\n      <br />\r\n      50,0,50,10\r\n      <br />\r\n      <strong>Позиционирование подписей</strong>\r\n      <br />В данный момент подписи позиционируются сверху и снизу от точки, по\r\n      своему центру:\r\n      <svg\r\n        width=\"100%\"\r\n        height={100}\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        viewBox=\"0 0 40 20\"\r\n        style={{ marginTop: 10 }}\r\n      >\r\n        <g fill=\"none\">\r\n          <rect\r\n            x={0}\r\n            y={0}\r\n            width={40}\r\n            height={10}\r\n            strokeWidth={1}\r\n            stroke=\"orange\"\r\n            fill=\"none\"\r\n          />\r\n          <rect\r\n            x={0}\r\n            y={10}\r\n            width={40}\r\n            height={10}\r\n            strokeWidth={1}\r\n            stroke=\"brown\"\r\n            fill=\"none\"\r\n          />\r\n          <circle cx={20} cy={10} r={2} fill=\"black\" />\r\n        </g>\r\n      </svg>\r\n    </Popover.Content>\r\n  </Popover>\r\n);\r\n\r\nconst Info = () => (\r\n  <OverlayTrigger trigger=\"click\" placement=\"right\" overlay={popover}>\r\n    {({ ref, ...props }) => (\r\n      <div className=\"d-flex flex-row justify-content-center\">\r\n        <div className=\"me-1\">Введите описание точек</div>\r\n        <div ref={ref} {...props} style={{ cursor: \"pointer\" }}>\r\n          <FiInfo />\r\n        </div>\r\n      </div>\r\n    )}\r\n  </OverlayTrigger>\r\n);\r\n\r\nexport function LabelPlacement() {\r\n  const [pointsProps, setPointsProps] = React.useState<PointsViewProps>({\r\n    points: [],\r\n  });\r\n  const setPointsPropsDebouced = debounce(setPointsProps, 500);\r\n\r\n  const [error, setError] = React.useState(\"\");\r\n  const [value, setValue] = React.useState(\"\");\r\n  const onChange = (value: string) => {\r\n    setValue(value);\r\n    if (value === \"\") {\r\n      setError(\"\");\r\n      return;\r\n    }\r\n\r\n    const labels = parseLabelDesc(value);\r\n    if (labels === undefined) {\r\n      setError(\"Не удалось разобрать входной файл.\");\r\n      return;\r\n    }\r\n\r\n    const pointsProps = getLabelsLayout(labels);\r\n    if (pointsProps === undefined) {\r\n      setError(\"Не удалось найти расположение подписей.\");\r\n      return;\r\n    }\r\n    setError(\"\");\r\n    setPointsPropsDebouced(pointsProps);\r\n  };\r\n\r\n  return (\r\n    <Container className=\"px-0 mx-0 mw-100 h-100\">\r\n      <Row className=\"main-container px-0 mx-0 mw-100 h-100\">\r\n        <Col className=\"main-left-panel h-100\">\r\n          <UploadableTextInput\r\n            value={value}\r\n            onChange={onChange}\r\n            label={<Info />}\r\n          />\r\n        </Col>\r\n        <Col className=\"main-content px-0 mx-0 h-100\">\r\n          {error ? (\r\n            <Alert\r\n              variant=\"danger\"\r\n            >\r\n              {error}\r\n            </Alert>\r\n          ) : (\r\n            <PointsView {...pointsProps} />\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n","export type Label = {\r\n  x: number;\r\n  y: number;\r\n  w: number;\r\n  h: number;\r\n  p1: { x: number; y: number };\r\n  p2: { x: number; y: number };\r\n};\r\n\r\n/**\r\n * Пока что считаем, что позиций две - сверху и снизу от точки.\r\n */\r\nexport function parseLabelDesc(desc: string): Label[] {\r\n  const labels = desc.split(\";\").map((line) => {\r\n    const splitted = line.split(\",\");\r\n    if (splitted.length !== 4) return undefined;\r\n    const parsed = splitted.map((n) => parseInt(n));\r\n    if (parsed.some((n) => isNaN(n))) return undefined;\r\n    const [x, y, w, h] = splitted.map((n) => parseInt(n));\r\n    return {\r\n      x,\r\n      y,\r\n      w,\r\n      h,\r\n      p1: { x: x - w / 2, y: y - h },\r\n      p2: { x: x - w / 2, y },\r\n    };\r\n  });\r\n\r\n  if (labels.some((x) => x === undefined)) return undefined;\r\n  return labels;\r\n}\r\n","import \"./Pages.css\";\r\n\r\nimport Tabs from \"react-bootstrap/Tabs\";\r\nimport Tab from \"react-bootstrap/Tab\";\r\nimport { TreeHV } from \"./TreeHV\";\r\nimport { LabelPlacement } from \"./LabelPlacement\";\r\n\r\nexport function Pages() {\r\n  return (\r\n    <Tabs defaultActiveKey=\"1\">\r\n      <Tab eventKey=\"1\" title=\"Задание 1\">\r\n        <TreeHV />\r\n      </Tab>\r\n      <Tab eventKey=\"2\" title=\"Задание 2\" disabled></Tab>\r\n      <Tab eventKey=\"3\" title=\"Задание 3\">\r\n        <LabelPlacement />\r\n      </Tab>\r\n    </Tabs>\r\n  );\r\n}\r\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Container\";\nimport Col from \"react-bootstrap/Container\";\nimport { Pages } from \"./pages\";\n\nfunction App() {\n  return (\n    <Container className=\"d-flex flex-column border border-secondary px-0 mx-0 mw-100\">\n      <Row className=\"bg-primary mw-100\">\n        <Col>\n          <h1 className=\"text-light\">\n            Сдача заданий по методам визуализации данных\n          </h1>\n          <p className=\"text-light\">Винокуров Сергей Сергеевич</p>\n        </Col>\n      </Row>\n      <Row className=\"content align-self-stretch px-0 mx-0 mw-100\">\n        <Pages />\n      </Row>\n      <Row className=\"footer bg-secondary mw-100\">\n        <Col className=\"position-relative mw-100\">\n          <a\n            className=\"text-light position-absolute end-0\"\n            href=\"https://github.com/pyspice/visualization_10sem\"\n          >\n            Github repo\n          </a>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;\n","import './index.css';\n\nimport * as ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,  \n    document.getElementById('root')\n);\n"],"sourceRoot":""}